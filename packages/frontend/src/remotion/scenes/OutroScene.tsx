import React from 'react';
import { 
  AbsoluteFill, 
  useCurrentFrame, 
  interpolate,
  spring,
  useVideoConfig
} from 'remotion';
import { AspectRatio } from '../config/videoConfig';
import { AnimatedText } from '../components/text/AnimatedText';

interface OutroSceneProps {
  topic: string;
  aspectRatio: AspectRatio;
}

export const OutroScene: React.FC<OutroSceneProps> = ({
  topic,
  aspectRatio
}) => {
  const frame = useCurrentFrame();
  const { fps } = useVideoConfig();
  
  // Animation timing
  const mainSpring = spring({
    frame,
    fps,
    config: {
      damping: 200,
      stiffness: 100,
      mass: 0.5,
    },
  });
  
  const ctaDelay = 30; // Start CTA after 30 frames
  const ctaSpring = spring({
    frame: frame - ctaDelay,
    fps,
    config: {
      damping: 200,
      stiffness: 100,
      mass: 0.5,
    },
  });
  
  // Scale and opacity animations
  const mainScale = interpolate(mainSpring, [0, 1], [0.9, 1]);
  const mainOpacity = interpolate(mainSpring, [0, 1], [0, 1]);
  
  const ctaScale = interpolate(ctaSpring, [0, 1], [0.9, 1]);
  const ctaOpacity = interpolate(ctaSpring, [0, 1], [0, 1]);
  
  // Responsive sizing
  const getTitleSize = () => {
    switch (aspectRatio) {
      case '9:16': return 'text-3xl md:text-4xl';
      case '1:1': return 'text-2xl md:text-3xl';
      default: return 'text-4xl md:text-5xl';
    }
  };
  
  const getSubtitleSize = () => {
    switch (aspectRatio) {
      case '9:16': return 'text-base md:text-lg';
      case '1:1': return 'text-sm md:text-base';
      default: return 'text-lg md:text-xl';
    }
  };
  
  return (
    <AbsoluteFill
      style={{
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center',
        alignItems: 'center',
        padding: aspectRatio === '9:16' ? '40px 20px' : '60px 40px',
        textAlign: 'center',
      }}
    >
      {/* Main Message */}
      <div
        style={{
          transform: `scale(${mainScale})`,
          opacity: mainOpacity,
          marginBottom: aspectRatio === '9:16' ? '30px' : '40px',
        }}
      >
        <AnimatedText
          text="Now you understand"
          className={`font-bold text-white leading-tight ${getTitleSize()} mb-4`}
          animationType="fadeIn"
          delay={0}
        />
        <AnimatedText
          text={topic}
          className={`font-semibold text-white/90 ${getSubtitleSize()}`}
          animationType="slideUp"
          delay={15}
        />
      </div>
      
      {/* Call to Action */}
      <div
        style={{
          transform: `scale(${ctaScale})`,
          opacity: ctaOpacity,
          maxWidth: aspectRatio === '9:16' ? '90%' : '70%',
        }}
      >
        <div className="bg-white/20 backdrop-blur-sm rounded-lg p-6 border border-white/30">
          <AnimatedText
            text="Ready to learn more?"
            className="text-white font-medium text-lg mb-2"
            animationType="fadeIn"
            delay={ctaDelay}
          />
          <AnimatedText
            text="Explore more educational animations"
            className="text-white/80 text-sm"
            animationType="fadeIn"
            delay={ctaDelay + 10}
          />
        </div>
      </div>
      
      {/* Branding */}
      <div
        style={{
          position: 'absolute',
          bottom: aspectRatio === '9:16' ? '20px' : '30px',
          opacity: interpolate(frame, [45, 60], [0, 0.6]),
        }}
      >
        <div className="text-white/60 text-xs font-medium">
          Generated by AI Video Creator
        </div>
      </div>
    </AbsoluteFill>
  );
};